@model IEnumerable<InventoryClientAPI.Models.Product>

@{
    ViewData["Title"] = "Index";
    var errorMessage = ViewBag.ErrorMessage;
}

<style>
        body{
	    font-family: Arial;
    }

    #main-container{
	    margin: 50px auto;
    }

    table{
	    background-color: white;
	    text-align: left;
	    border-collapse: collapse;
	    width: 100%;
    }

    th, td{
	    padding: 20px;
    }

    thead{
	    background-color: #246355;
	    border-bottom: solid 5px #0F362D;
	    color: white;
    }

    tr:nth-child(even){
	    background-color: #ddd;
    }

    tr:hover td{
	    background-color: #369681;
	    color: white;
    }
</style>
<p class="mt-3">
    <button type="button" class="btn" style="background-color: #22c122" onclick="location.href='@Url.Action("Create", "Product")'">
        <img width="32" height="32" src="https://img.icons8.com/ios/50/plus--v1.png" alt="plus--v1"/>
    </button>
</p>
<div id="main-container">
	<table>
		<thead>
			<tr>
				<th>
                    Nombre
                </th>
                <th>
                    Tipo elaboracion
                </th>
                <th>
                   Estado
                </th>
                <th>
                   Fecha ingreso
                </th>
                <th>
                   Fecha actualizacion
                </th>
                 <th></th>
			</tr>
		</thead>

		@foreach (var item in Model) {
            <tr>
                 <td>
                     @Html.DisplayFor(modelItem => item.ProductName)
                 </td>
                 <td>
                     @Html.DisplayFor(modelItem => item.ProductionType)
                 </td>
                 <td>
                     @Html.DisplayFor(modelItem => item.ProductStatus)
                 </td>
                 <td>
                   @Html.DisplayFor(modelItem => item.DateAdded, "{0:dd-MM-yyyy}")
                 </td>
                 <td>
                     @Html.DisplayFor(modelItem => item.LastUpdated, "{0:dd-MM-yyyy}")
                 </td>
                 <td style="display: flex; gap: 2px;">
                     @Html.ActionLink("Editar", "Edit", new { id = item.ProductId }, new { @class = "btn btn-primary" })
                     @Html.ActionLink("Ver", "Details", new { id = item.ProductId }, new { @class = "btn btn-success" })
                     <a href="@Url.Action("Delete", new { id = item.ProductId })" class="btn btn-danger" onclick="confirmDelete(event)">Eliminar</a>
                 </td>

                <script>
                    function confirmDelete(event) {
                        event.preventDefault();
                        const url = event.target.href;

                        Swal.fire({
                            title: '¿Estás seguro?',
                            text: "¡No podrás revertir esto!",
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Sí, eliminar',
                            cancelButtonText: 'Cancelar'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = url;
                            }
                        })
                    }
                </script>
            </tr>
        }
	</table>
</div>

@if (!string.IsNullOrEmpty(errorMessage))

@section Scripts {
    <script>
       var errorMessage = '@errorMessage';
        if (errorMessage) {
            alert(errorMessage);
        }
    </script>
}
